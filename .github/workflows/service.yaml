name: Git Commits As A Service
run-name: Add git commits authored by ${{ github.actor }} in constant time intervals
on:
  workflow_dispatch:
    inputs:
      minutes-between-intervals:
        description: 'Set the number of minutes to wait between each interval of a git commit'
        required: true
        default: '60'
        type: string

jobs:
  Commit-Service:
    runs-on: ubuntu-latest
    steps:
      - name: Get Author's Email
        id: author-email
        uses: evvanErb/get-github-email-by-username-action@v1.25
        with:
          github-username: ${{ github.actor }}
      - name: Initialize Environment Variables
        run: |
          echo GIT_SERVICE_BRANCH=service >> $GITHUB_ENV
      - name: Checkout Repository Code
        uses: actions/checkout@v4
      - name: Setup Git Config
        run: |
          git config user.name ${{ github.actor }}
          git config user.email "${{ steps.author-email.outputs.email }}"
          git config alias.checkoutoc '!f() { git checkout $1 2>/dev/null || git checkout -b $1; }; f'
      - name: Git Fetch
        continue-on-error: true
        run: git fetch -p
      - name: Checkout To Service Branch & Commit The Current Date & Push
        if: always()
        run: |
          while true; do
                git checkoutoc ${GIT_SERVICE_BRANCH}
                date > commit.txt
                git add .
                git commit -m 'Commit the current date'
                git push origin ${GIT_SERVICE_BRANCH}:${GIT_SERVICE_BRANCH}
                git checkout main
                git merge --no-ff -X ours --allow-unrelated-histories ${GIT_SERVICE_BRANCH}
                git push origin main:main              
                sleep $((60 * ${{ github.event.inputs.minutes-between-intervals }}))
          done;
